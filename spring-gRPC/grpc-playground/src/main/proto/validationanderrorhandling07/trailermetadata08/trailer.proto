syntax = "proto3";

package validationanderrorhandling.trailermetadata;

option java_multiple_files = true;
option java_package = "com.example.validationanderrorhandling.trailermetadata";

message BalanceCheckRequest {
  int32 account_number = 1;
}

message AccountBalance {
  int32 account_number = 1;
  int32 balance = 2;
}

message WithdrawRequest {
  int32 account_number = 1;
  int32 amount = 2;
}

message Money {
  int32 amount = 1;
}

// Trailer metadata error codes - client error specific
enum ValidationCode {
  INVALID_ACCOUNT = 0;
  ACCOUNT_NOT_FOUND = 1;
  INVALID_AMOUNT = 2;
  INSUFFICIENT_BALANCE = 3;
}

message ErrorMessage {
  ValidationCode validation_code = 1;
  optional string error_description = 2;
}

service BankService {
  /*
      Unary
      - account number should be between 1 and 10
   */
  rpc GetAccountBalance(BalanceCheckRequest) returns (AccountBalance);

  /*
      Server streaming
      - account number should be between 1 and 10
      - amount should be 100 multiples
      - account should have enough balance
   */
  rpc Withdraw(WithdrawRequest) returns (stream Money);

}